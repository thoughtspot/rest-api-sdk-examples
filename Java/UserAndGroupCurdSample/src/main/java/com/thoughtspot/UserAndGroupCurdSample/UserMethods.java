/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
package com.thoughtspot.UserAndGroupCurdSample;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import localhost.RESTAPISDKClient;
import localhost.controllers.UserController;
import localhost.exceptions.ApiException;
import localhost.models.StateEnum;
import localhost.models.TspublicRestV2UserCreateRequest;
import localhost.models.TspublicRestV2UserSearchRequest;
import localhost.models.UserResponse;

/**
 * User CRUD operations.
 */
public class UserMethods extends ControllerBase {

    /**
     * Search for active users.
     *
     * @param client RESTAPISDKClient.
     * @return list of user names.
     * @throws IOException .
     * @throws ApiException .
     */
    public List<String> searchActiveUsers(RESTAPISDKClient client)
            throws IOException, ApiException {
        UserController userController = client.getUserController();

        TspublicRestV2UserSearchRequest tspublicRestV2UserSearchRequest =
                new TspublicRestV2UserSearchRequest();
        tspublicRestV2UserSearchRequest.setState(StateEnum.ACTIVE);

        List<UserResponse> result = userController.searchUsers(tspublicRestV2UserSearchRequest);

        List<String> names = result.stream().map(
                name -> name.getName()).collect(Collectors.toList());

        return names;
    }

    /**
     * Create new user.
     *
     * @param client RESTAPISDKClient.
     * @param users list users.
     * @return list of user response objects.
     * @throws IOException .
     * @throws ApiException .
     */
    public List<UserResponse> createNewUser(
            RESTAPISDKClient client, List<TspublicRestV2UserCreateRequest> users)
            throws IOException, ApiException {

        List<UserResponse> result = new ArrayList<>();
        UserController userController = client.getUserController();

        for (TspublicRestV2UserCreateRequest tspublicRestV2UserCreateRequest : users) {
            result.add(userController.createUser(tspublicRestV2UserCreateRequest));
        }

        return result;
    }
}
